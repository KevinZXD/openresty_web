---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xudong12.
--- DateTime: 2020/2/26 1:29 PM
---
-----------------------------------------------------------------------------
-- ./sm文件夹里面各service module文件的公共父类
--
-----------------------------------------------------------------------------

module(..., package.seeall)

-----------------------------------------------------------------------------
-- 执行方法，处理capture调用返回的数据，并将其存放在data变量中
-- Input
-- @param self 调用者自身self
-- @param resp capture调用返回的数据
-- Returns
-- @return
-----------------------------------------------------------------------------
function run(self, resp)
    --if resp.status == 200 then
    --    local cjson = require('cjson')
    --    local f, _data = pcall(cjson.decode, resp.body)
    --
    --    if f and _data ~= cjson.null then
    --        self.data = _data
    --    end
    --end
    ngx.log(ngx.ERR,'处理capture调用返回的数据，并将其存放在data变量中')
end

-- 暂时没用到
function finish(self)
    local smc = require('config.common')
    local _prefix = self.name .. '(' .. self.id .. ')'
    if smc.STATUS_OK == self.status then
        self:save_stats_log()
    end
end

-- 暂时没用到
function save_stats_log(self)
    local conf = require('config.common')
    if self.tmeta and self.tmeta.logs and type(self.tmeta.logs) == 'table' then
        local L1 = {}
        for k1,v1 in pairs(self.tmeta.logs) do
            if type(v1) == 'table' then
                local L2 = {}
                for k2,v2 in pairs(v1) do
                    if type(v2) == 'table' then
                        local L3 = {}
                        for k3,v3 in pairs(v2) do
                            table.insert(L3, k3 .. ':' .. tostring(v3))
                        end
                        if #L3 > 0 then
                            table.insert(L2, table.concat(L3, conf.LOG_RS))
                        end
                    else
                        table.insert(L2, k2 .. ':' .. tostring(v2))
                    end
                end
                if #L2 > 0 then
                    table.insert(L1, table.concat(L2, conf.LOG_GS))
                end
            else
                table.insert(L1, k1 .. ':' .. tostring(v1))
            end
        end
        if #L1 > 0 then
            local log = table.concat(L1, conf.LOG_FS)
            if #log > 0 then
                self.core.stats:append(log)
            end
        end
    end
end
