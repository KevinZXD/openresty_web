---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xudong12.
--- DateTime: 2020/2/26 1:36 PM
---

-----------------------------------------------------------------------------
-- 默认调度处理程序
--
-----------------------------------------------------------------------------

module(..., package.seeall)

-----------------------------------------------------------------------------
-- 初始化方法
-- 会引用trends.scheduler并加入元表，相当于继承该类
-- Input
-- @param core 调用者的自身对象self
-- Returns
-- @return 初始化后的对象
-----------------------------------------------------------------------------
function new(self, core)
    -- Inherit from super class
    local parent = require('trends.scheduler')
    setmetatable(self, {__index = parent})
    return setmetatable({core = core, modules = {}}, {__index=self})
end

-----------------------------------------------------------------------------
-- 初始化当前存在的产品线的各处理文件的对象，并执行调度方法
-- Input
-- @param self 调用者的自身对象self
-- Returns
-- @return
-----------------------------------------------------------------------------
function run(self)
    local modules = self.core.service_conf.modules
    if self.core.ex_product then

        for _, product in pairs(self.core.ex_product) do
            local mt = require(modules[product]) -- 加载sm里面各个产品线的处理文件
            local mo = mt:new(product, self.core)
            local limited, reason = mo:ctrl() -- 执行各处理文件的控制方法，来决定要不要响应这个请求
            if not limited then
                table.insert(self.modules, mo) -- 如果没有限制，则放入待处理模块列表中
            end
        end
    end

    self:process_modules() -- 调用父类的处理方法


    if next(self.core.scheduler.modules) ~= nil then  -- 处理角标和翻版可能同时出现 归到一个数组里
        local tmp = {}
        local sign  -- 标志位， 把后面的数组都归类到标志位的数组中，其他删除
        for i, mo in pairs(self.core.scheduler.modules) do
            if mo.id == 'video' or mo.id == 'videobanner' then
                if i == 1 then
                    sign = i
                end
                for ad_type, value in pairs(mo.data) do
                    tmp[ad_type] = value
                    self.core.scheduler.modules[sign].data = tmp
                end
                if i > 1 then
                    self.core.scheduler.modules[i] = nil
                end
            end
        end


    end

end


